{"version":3,"sources":["actions/CharacterActions.js","components/Search.js","components/CharacterItem.js","components/CharactersList.js","containers/List.js","components/CharacterDetail.js","containers/Detail.js","App.js","serviceWorker.js","reducers/CharactersList.js","reducers/CharacterItem.js","reducers/index.js","index.js","Store/Store.js"],"names":["apiUrl","SEARCH_CHARACTERS","REQUEST_CHARACTER_ITEM","CHARACTERS_ERROR","searchCharacter","search","dispatch","a","axios","get","replace","res","type","payload","data","query","allCharacters","requestCharacterItem","id","character","Search","onSearchChange","onSearchEmpty","useState","setSearch","textVisible","setTextVisible","useEffect","style","textAlign","margin","width","height","name","placeholder","onChange","e","target","value","borderRadius","onClick","OnclickSearch","CharacterItem","to","alt","src","image","CharactersList","characterItems","characters","map","marginTop","connect","state","charactersList","actions","bindActionCreators","Actions","Character","variant","species","status","characterItem","useParams","App","path","exact","component","List","Detail","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","results","store","createStore","RootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64f1bc9f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiUrl = \"https://rickandmortyapi.com/api\";\n\nexport const SEARCH_CHARACTERS = \"SEARCH_CHARACTERS\";\nexport const REQUEST_CHARACTER_ITEM = \"REQUEST_CHARACTER_ITEM\";\nexport const CHARACTERS_ERROR = \"CHARACTERS_ERROR\";\n\nexport const searchCharacter = (search = null) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${apiUrl}/character/?name=${search.replace(/\\s/g, \"+\")}`\n    );\n\n    dispatch({\n      type: \"SEARCH_CHARACTERS\",\n      payload: res.data,\n      query: search,\n    });\n  } catch (e) {\n    dispatch({\n      type: \"CHARACTERS_ERROR\",\n    });\n  }\n};\n\nexport const allCharacters = () => async (dispatch) => {\n  try {\n    const res = await axios.get(`${apiUrl}/character`);\n\n    dispatch({\n      type: \"SEARCH_CHARACTERS\",\n      payload: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: \"CHARACTERS_ERROR\",\n    });\n  }\n};\n\nexport const requestCharacterItem = (id = null) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${apiUrl}/character/${id}`);\n\n    dispatch({\n      type: \"REQUEST_CHARACTER_ITEM\",\n      payload: res.data,\n      character: id,\n    });\n  } catch (e) {\n    dispatch({\n      type: \"CHARACTERS_ERROR\",\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nconst Search = ({ onSearchChange, onSearchEmpty }) => {\n  const [search, setSearch] = useState(\"\");\n  const [textVisible, setTextVisible] = useState(false);\n\n  useEffect(() => {\n    if (search === \"\") {\n      onSearchEmpty();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const OnclickSearch = (search) => {\n    onSearchChange(search);\n    setTextVisible(true);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", margin: \"40px\" }}>\n      <input\n        style={{ margin: \"15px\", width: \"50%\", height: \"30px\" }}\n        type=\"text\"\n        id=\"search\"\n        name=\"search\"\n        placeholder=\"Busca un personaje\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <button\n        style={{ width: \"10%\", height: \"30px\", borderRadius: \"10px\" }}\n        type=\"button\"\n        onClick={() => OnclickSearch(search)}\n      >\n        Buscar\n      </button>\n\n      {textVisible && <p> Resultados para \"{search}\" </p>}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterItem = ({ character }) => {\n  return (\n    <Link to={`/character/${character.id}`} style={{ margin: \"20px\" }}>\n      <img\n        style={{ width: \"10rem\" }}\n        alt={character.id}\n        src={character.image}\n      />\n    </Link>\n  );\n};\n\nexport default CharacterItem;\n","import React from \"react\";\nimport CharacterItem from \"./CharacterItem\";\n\nconst CharactersList = ({ characters }) => {\n  const characterItems = characters.map((character) => {\n    return <CharacterItem key={character.id} character={character} />;\n  });\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <div>{characterItems}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharactersList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as Actions from \"../actions/CharacterActions\";\nimport Search from \"../components/Search\";\nimport CharactersList from \"../components/CharactersList\";\n\nconst List = ({ actions, characters }) => {\n  return (\n    <div>\n      <Search\n        onSearchChange={actions.searchCharacter}\n        onSearchEmpty={actions.allCharacters}\n      />\n      <CharactersList characters={characters} />\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    characters: state.charactersList.data,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from \"react\";\n\nconst Character = ({ character }) => {\n  return (\n    <div style={{ textAlign: \"center\", margin: \"20px\" }}>\n      <div>\n        <img variant=\"top\" src={character.image} alt={character.id} />\n        <p>{character.name}</p>\n        <p>{character.species}</p>\n        <p>{character.status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Character;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as Actions from \"../actions/CharacterActions\";\nimport Character from \"../components/CharacterDetail\";\n\nconst Detail = ({ actions, characterItem }) => {\n  const { character } = useParams();\n\n  useEffect(() => {\n    actions.requestCharacterItem(character);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [character]);\n\n  //   if (!props.characterItem) return <Spinner animation=\"border\" />;\n\n  return (\n    <div>\n      <Character character={characterItem} />\n    </div>\n  );\n};\n\nfunction mapStateToProps({ characterItem }) {\n  return {\n    characterItem: characterItem.data,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport List from \"./containers/List\";\nimport Detail from \"./containers/Detail\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path={\"/\"} exact component={List} />\n          <Route path={\"/character/:character\"} exact component={Detail} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SEARCH_CHARACTERS } from \"../actions/CharacterActions\";\n\nconst initialState = {\n  data: [],\n};\n\nexport default function charactersList(\n  state = initialState,\n  { type, payload }\n) {\n  switch (type) {\n    case SEARCH_CHARACTERS:\n      return {\n        ...state,\n        data: payload.results,\n      };\n    default:\n      return state;\n  }\n}\n","import { REQUEST_CHARACTER_ITEM } from \"../actions/CharacterActions\";\n\nconst initialState = {\n  data: {},\n};\n\nexport default function characterItem(state = initialState, { type, payload }) {\n  switch (type) {\n    case REQUEST_CHARACTER_ITEM:\n      const { name, status, species, image, id } = payload;\n      const characterItem = { name, status, species, image, id };\n\n      return { ...state, data: characterItem };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport CharactersList from \"./CharactersList\";\nimport CharacterItem from \"./CharacterItem\";\n\nconst rootReducer = combineReducers({\n  charactersList: CharactersList,\n  characterItem: CharacterItem,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport configureStore from \"./Store/Store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import { createStore } from \"redux\";\nimport RootReducer from \"../reducers\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst Store = (initialState) => {\n  const store = createStore(RootReducer, initialState, applyMiddleware(thunk));\n\n  return store;\n};\n\nexport default Store;\n"],"sourceRoot":""}